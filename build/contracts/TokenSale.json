{
  "contractName": "TokenSale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceKYCVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addKYCVerifier",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "kycAuthorized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isKYCVerifier",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINIMUM_CONTRIBUTION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "FIRST_DAY_DURATION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "grantKYCAuthorizations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "accounts",
          "type": "address[]"
        }
      ],
      "name": "revertKYCAuthorizations",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "firstDayRate",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "pool",
          "type": "address"
        },
        {
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCAuthorizationGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCAuthorizationReverted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCVerifierAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "KYCVerifierRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160e08062001ecf83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050868685858460016000819055506000831115156200008e57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620000cb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200010857600080fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050428210151515620001a457600080fd5b8181111515620001b357600080fd5b816005819055508060068190555050506000600760006101000a81548160ff021916908315150217905550620001f833620003f0640100000000026401000000009004565b6000600960006101000a81548160ff0219169083151502179055506200022d336200045a640100000000026401000000009004565b600085111515620002a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f6669727374206461792072617465206d7573742062652061626f76652030000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200034c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f706f6f6c2063616e6e6f7420626520746865207a65726f20616464726573730081525060200191505060405180910390fd5b86600c8190555084600d8190555083600e8190555081600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050506200061c565b62000414816008620004c46401000000000262001687179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6200047e81600a620004c46401000000000262001687179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f5565480284cbd6151ab5813b9bd9e9b3f9e0e7d2a3a8110e0ca9b24ca819dc0160405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200050157600080fd5b6200051c828262000587640100000000026401000000009004565b1515156200052957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620005c557600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6118a3806200062c6000396000f300608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b1461015f57806318e6010f1461018e5780632c4e722e146101a557806334ce5d2d146101d05780633f4ba83a146102135780634042b66f1461022a57806342a14d1f1461025557806346fbf68e146102b057806347535d7b1461030b5780634b6753bc1461033a5780634bb278f314610365578063521eb2731461037c5780635c975abb146103d3578063696eee51146104025780636ef8d66d1461045d57806382dc1ec4146104745780638456cb59146104b75780638d0bba03146104ce578063923f7ce2146104f9578063b3449bbc14610524578063b3b5e6ea1461058a578063b3f05b97146105f0578063b7a8807c1461061f578063ec8ac4d81461064a578063f7fb07b014610680578063fc0c546a146106ab575b61015d33610702565b005b34801561016b57600080fd5b506101746107f8565b604051808215151515815260200191505060405180910390f35b34801561019a57600080fd5b506101a3610804565b005b3480156101b157600080fd5b506101ba61080f565b6040518082815260200191505060405180910390f35b3480156101dc57600080fd5b50610211600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610819565b005b34801561021f57600080fd5b506102286108a2565b005b34801561023657600080fd5b5061023f610951565b6040518082815260200191505060405180910390f35b34801561026157600080fd5b50610296600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095b565b604051808215151515815260200191505060405180910390f35b3480156102bc57600080fd5b506102f1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b1565b604051808215151515815260200191505060405180910390f35b34801561031757600080fd5b506103206109ce565b604051808215151515815260200191505060405180910390f35b34801561034657600080fd5b5061034f6109e9565b6040518082815260200191505060405180910390f35b34801561037157600080fd5b5061037a6109f3565b005b34801561038857600080fd5b50610391610a73565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103df57600080fd5b506103e8610a9d565b604051808215151515815260200191505060405180910390f35b34801561040e57600080fd5b50610443600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab4565b604051808215151515815260200191505060405180910390f35b34801561046957600080fd5b50610472610ad1565b005b34801561048057600080fd5b506104b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610adc565b005b3480156104c357600080fd5b506104cc610afc565b005b3480156104da57600080fd5b506104e3610bac565b6040518082815260200191505060405180910390f35b34801561050557600080fd5b5061050e610bb8565b6040518082815260200191505060405180910390f35b34801561053057600080fd5b5061058860048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610bbf565b005b34801561059657600080fd5b506105ee60048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610d3d565b005b3480156105fc57600080fd5b50610605610ebb565b604051808215151515815260200191505060405180910390f35b34801561062b57600080fd5b50610634610ed2565b6040518082815260200191505060405180910390f35b61067e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610702565b005b34801561068c57600080fd5b50610695610edc565b6040518082815260200191505060405180910390f35b3480156106b757600080fd5b506106c0610f10565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060006001600080828254019250508190555060005490503492506107298484610f3a565b61073283611134565b91506107498360045461115790919063ffffffff16565b6004819055506107598483611178565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a36107d08484611186565b6107d861118a565b6107e284846111f5565b600054811415156107f257600080fd5b50505050565b60006006544211905090565b61080d336111f9565b565b6000600354905090565b61082233610ab4565b1515610896576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6d757374206265204b594320766572696669657200000000000000000000000081525060200191505060405180910390fd5b61089f81611253565b50565b6108ab336109b1565b15156108b657600080fd5b600960009054906101000a900460ff1615156108d157600080fd5b6000600960006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000600454905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60006109c78260086112ad90919063ffffffff16565b9050919050565b600060055442101580156109e457506006544211155b905090565b6000600654905090565b600760009054906101000a900460ff16151515610a0f57600080fd5b610a176107f8565b1515610a2257600080fd5b6001600760006101000a81548160ff021916908315150217905550610a45611341565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900460ff16905090565b6000610aca82600a6112ad90919063ffffffff16565b9050919050565b610ada33611474565b565b610ae5336109b1565b1515610af057600080fd5b610af9816114ce565b50565b610b05336109b1565b1515610b1057600080fd5b600960009054906101000a900460ff16151515610b2c57600080fd5b6001600960006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b67016345785d8a000081565b6201518081565b6000610bca33610ab4565b1515610c3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6d757374206265204b594320766572696669657200000000000000000000000081525060200191505060405180910390fd5b600090505b8151811015610d39576001600b60008484815181101515610c6057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181101515610cc957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c185685ceb03e9a8983900153554b9ec01ee854b55b319ee0563515a01bbdc760405160405180910390a38080600101915050610c43565b5050565b6000610d4833610ab4565b1515610dbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6d757374206265204b594320766572696669657200000000000000000000000081525060200191505060405180910390fd5b600090505b8151811015610eb7576000600b60008484815181101515610dde57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181101515610e4757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f020398f502fe64d86a50ec8fc67611cfe4a6a14aeeec2f6bc0962aba5a03af5160405160405180910390a38080600101915050610dc1565b5050565b6000600760009054906101000a900460ff16905090565b6000600554905090565b6000610ef662015180600c5461115790919063ffffffff16565b421015610f0757600d549050610f0d565b600e5490505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f448282611528565b610f4c610a9d565b151515610fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f63616e6e6f74207075726368617365207768656e20636f6e747261637420697381526020017f207061757365640000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b67016345785d8a0000341015151561108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f636f6e747269627574696f6e206d7573742062652061626f7665206d696e697581526020017f6d20617574686f72697a6564000000000000000000000000000000000000000081525060400191505060405180910390fd5b6110968261095b565b1515611130576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f62656e6566696369617279206d757374206265204b594320617574686f72697a81526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5050565b6000611150611141610edc565b8361154990919063ffffffff16565b9050919050565b600080828401905083811015151561116e57600080fd5b8091505092915050565b6111828282611587565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156111f2573d6000803e3d6000fd5b50565b5050565b61120d81600a6115d890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f84fda749cd5d78392088aeddee30341ef789376b68e94319eff31cb54d561ef060405160405180910390a250565b61126781600a61168790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f5565480284cbd6151ab5813b9bd9e9b3f9e0e7d2a3a8110e0ca9b24ca819dc0160405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112ea57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061134b611737565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561140857600080fd5b505af115801561141c573d6000803e3d6000fd5b505050506040513d602081101561143257600080fd5b81019080805190602001909291905050509050611471600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611587565b50565b6114888160086115d890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b6114e281600861168790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6115306109ce565b151561153b57600080fd5b6115458282611739565b5050565b600080600084141561155e5760009150611580565b828402905082848281151561156f57fe5b0414151561157c57600080fd5b8091505b5092915050565b6115d48282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117899092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561161457600080fd5b61161e82826112ad565b151561162957600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116c357600080fd5b6116cd82826112ad565b1515156116d957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561177557600080fd5b6000811415151561178557600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561182c57600080fd5b505af1158015611840573d6000803e3d6000fd5b505050506040513d602081101561185657600080fd5b8101908080519060200190929190505050151561187257600080fd5b5050505600a165627a7a72305820a2fd34cc4ccb03101e6e166c874d848cb2931fc56aea43be95371f6e4783feca0029",
  "deployedBytecode": "0x608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b1461015f57806318e6010f1461018e5780632c4e722e146101a557806334ce5d2d146101d05780633f4ba83a146102135780634042b66f1461022a57806342a14d1f1461025557806346fbf68e146102b057806347535d7b1461030b5780634b6753bc1461033a5780634bb278f314610365578063521eb2731461037c5780635c975abb146103d3578063696eee51146104025780636ef8d66d1461045d57806382dc1ec4146104745780638456cb59146104b75780638d0bba03146104ce578063923f7ce2146104f9578063b3449bbc14610524578063b3b5e6ea1461058a578063b3f05b97146105f0578063b7a8807c1461061f578063ec8ac4d81461064a578063f7fb07b014610680578063fc0c546a146106ab575b61015d33610702565b005b34801561016b57600080fd5b506101746107f8565b604051808215151515815260200191505060405180910390f35b34801561019a57600080fd5b506101a3610804565b005b3480156101b157600080fd5b506101ba61080f565b6040518082815260200191505060405180910390f35b3480156101dc57600080fd5b50610211600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610819565b005b34801561021f57600080fd5b506102286108a2565b005b34801561023657600080fd5b5061023f610951565b6040518082815260200191505060405180910390f35b34801561026157600080fd5b50610296600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061095b565b604051808215151515815260200191505060405180910390f35b3480156102bc57600080fd5b506102f1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b1565b604051808215151515815260200191505060405180910390f35b34801561031757600080fd5b506103206109ce565b604051808215151515815260200191505060405180910390f35b34801561034657600080fd5b5061034f6109e9565b6040518082815260200191505060405180910390f35b34801561037157600080fd5b5061037a6109f3565b005b34801561038857600080fd5b50610391610a73565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103df57600080fd5b506103e8610a9d565b604051808215151515815260200191505060405180910390f35b34801561040e57600080fd5b50610443600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ab4565b604051808215151515815260200191505060405180910390f35b34801561046957600080fd5b50610472610ad1565b005b34801561048057600080fd5b506104b5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610adc565b005b3480156104c357600080fd5b506104cc610afc565b005b3480156104da57600080fd5b506104e3610bac565b6040518082815260200191505060405180910390f35b34801561050557600080fd5b5061050e610bb8565b6040518082815260200191505060405180910390f35b34801561053057600080fd5b5061058860048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610bbf565b005b34801561059657600080fd5b506105ee60048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610d3d565b005b3480156105fc57600080fd5b50610605610ebb565b604051808215151515815260200191505060405180910390f35b34801561062b57600080fd5b50610634610ed2565b6040518082815260200191505060405180910390f35b61067e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610702565b005b34801561068c57600080fd5b50610695610edc565b6040518082815260200191505060405180910390f35b3480156106b757600080fd5b506106c0610f10565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008060006001600080828254019250508190555060005490503492506107298484610f3a565b61073283611134565b91506107498360045461115790919063ffffffff16565b6004819055506107598483611178565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a36107d08484611186565b6107d861118a565b6107e284846111f5565b600054811415156107f257600080fd5b50505050565b60006006544211905090565b61080d336111f9565b565b6000600354905090565b61082233610ab4565b1515610896576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6d757374206265204b594320766572696669657200000000000000000000000081525060200191505060405180910390fd5b61089f81611253565b50565b6108ab336109b1565b15156108b657600080fd5b600960009054906101000a900460ff1615156108d157600080fd5b6000600960006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6000600454905090565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60006109c78260086112ad90919063ffffffff16565b9050919050565b600060055442101580156109e457506006544211155b905090565b6000600654905090565b600760009054906101000a900460ff16151515610a0f57600080fd5b610a176107f8565b1515610a2257600080fd5b6001600760006101000a81548160ff021916908315150217905550610a45611341565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600960009054906101000a900460ff16905090565b6000610aca82600a6112ad90919063ffffffff16565b9050919050565b610ada33611474565b565b610ae5336109b1565b1515610af057600080fd5b610af9816114ce565b50565b610b05336109b1565b1515610b1057600080fd5b600960009054906101000a900460ff16151515610b2c57600080fd5b6001600960006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b67016345785d8a000081565b6201518081565b6000610bca33610ab4565b1515610c3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6d757374206265204b594320766572696669657200000000000000000000000081525060200191505060405180910390fd5b600090505b8151811015610d39576001600b60008484815181101515610c6057fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181101515610cc957fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c185685ceb03e9a8983900153554b9ec01ee854b55b319ee0563515a01bbdc760405160405180910390a38080600101915050610c43565b5050565b6000610d4833610ab4565b1515610dbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6d757374206265204b594320766572696669657200000000000000000000000081525060200191505060405180910390fd5b600090505b8151811015610eb7576000600b60008484815181101515610dde57fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508181815181101515610e4757fe5b9060200190602002015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f020398f502fe64d86a50ec8fc67611cfe4a6a14aeeec2f6bc0962aba5a03af5160405160405180910390a38080600101915050610dc1565b5050565b6000600760009054906101000a900460ff16905090565b6000600554905090565b6000610ef662015180600c5461115790919063ffffffff16565b421015610f0757600d549050610f0d565b600e5490505b90565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610f448282611528565b610f4c610a9d565b151515610fe7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f63616e6e6f74207075726368617365207768656e20636f6e747261637420697381526020017f207061757365640000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b67016345785d8a0000341015151561108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f636f6e747269627574696f6e206d7573742062652061626f7665206d696e697581526020017f6d20617574686f72697a6564000000000000000000000000000000000000000081525060400191505060405180910390fd5b6110968261095b565b1515611130576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f62656e6566696369617279206d757374206265204b594320617574686f72697a81526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5050565b6000611150611141610edc565b8361154990919063ffffffff16565b9050919050565b600080828401905083811015151561116e57600080fd5b8091505092915050565b6111828282611587565b5050565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156111f2573d6000803e3d6000fd5b50565b5050565b61120d81600a6115d890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f84fda749cd5d78392088aeddee30341ef789376b68e94319eff31cb54d561ef060405160405180910390a250565b61126781600a61168790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f5565480284cbd6151ab5813b9bd9e9b3f9e0e7d2a3a8110e0ca9b24ca819dc0160405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112ea57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061134b611737565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561140857600080fd5b505af115801561141c573d6000803e3d6000fd5b505050506040513d602081101561143257600080fd5b81019080805190602001909291905050509050611471600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682611587565b50565b6114888160086115d890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b6114e281600861168790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6115306109ce565b151561153b57600080fd5b6115458282611739565b5050565b600080600084141561155e5760009150611580565b828402905082848281151561156f57fe5b0414151561157c57600080fd5b8091505b5092915050565b6115d48282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117899092919063ffffffff16565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561161457600080fd5b61161e82826112ad565b151561162957600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156116c357600080fd5b6116cd82826112ad565b1515156116d957600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561177557600080fd5b6000811415151561178557600080fd5b5050565b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561182c57600080fd5b505af1158015611840573d6000803e3d6000fd5b505050506040513d602081101561185657600080fd5b8101908080519060200190929190505050151561187257600080fd5b5050505600a165627a7a72305820a2fd34cc4ccb03101e6e166c874d848cb2931fc56aea43be95371f6e4783feca0029",
  "sourceMap": "1044:4783:3:-;;;2527:594;8:9:-1;5:2;;;30:1;27;20:12;5:2;2527:594:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2800:11;2813;2756:4;2762:6;2770:5;559:1:25;543:13;:17;;;;2322:1:15;2315:4;:8;2307:17;;;;;;;;2356:1;2338:20;;:6;:20;;;;2330:29;;;;;;;;2390:1;2373:19;;:5;:19;;;;2365:28;;;;;;;;2408:4;2400:5;:12;;;;2428:6;2418:7;;:16;;;;;;;;;;;;;;;;;;2449:5;2440:6;;:14;;;;;;;;;;;;;;;;;;2236:223;;;772:15:17;757:11;:30;;749:39;;;;;;;;816:11;802;:25;794:34;;;;;;;;850:11;835:12;:26;;;;882:11;867:12;:26;;;;622:276;;442:5:16;429:10;;:18;;;;;;;;;;;;;;;;;;260:22:14;271:10;260;;;:22;;;:::i;:::-;350:5:18;340:7;;:15;;;;;;;;;;;;;;;;;;330:27:12;346:10;330:15;;;:27;;;:::i;:::-;2863:1:3;2848:12;:16;2840:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2933:1;2917:18;;:4;:18;;;;2909:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2997:11;2982:12;:26;;;;3034:12;3018:13;:28;;;;3064:4;3056:5;:12;;;;3086:4;3078:5;;:12;;;;;;;;;;;;;;;;;;3109:5;3100:6;;:14;;;;;;;;;;;;;;;;;;2527:594;;;;;;;1044:4783;;629:108:14;681:20;693:7;681;:11;;;;;;:20;;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;813:133:12:-;874:25;891:7;874:12;:16;;;;;;:25;;;;;:::i;:::-;931:7;914:25;;;;;;;;;;;;813:133;:::o;244:167:13:-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;;;:18;;;:::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;725:166::-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;1044:4783:3:-;;;;;;;",
  "deployedSourceMap": "1044:4783:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2897:21:15;2907:10;2897:9;:21::i;:::-;1044:4783:3;1594:154:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:154:17;;;;;;;;;;;;;;;;;;;;;;;;;;;722:85:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;722:85:12;;;;;;3260:68:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3260:68:15;;;;;;;;;;;;;;;;;;;;;;;611:105:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;611:105:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085::18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:105:18;;;;;;3383:79:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3383:79:15;;;;;;;;;;;;;;;;;;;;;;;686:119:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;686:119:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:100:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:100:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1253:187:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1253:187:17;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1094:82:17;;;;;;;;;;;;;;;;;;;;;;;758:161:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;758:161:16;;;;;;3111:72:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3111:72:15;;;;;;;;;;;;;;;;;;;;;;;;;;;438:69:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:69:18;;;;;;;;;;;;;;;;;;;;;;;;;;;489:116:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:116:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;556:69:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:69:14;;;;;;468:84;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:84:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:103:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:103:18;;;;;;1238:56:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1238:56:3;;;;;;;;;;;;;;;;;;;;;;;1324:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1324:53:3;;;;;;;;;;;;;;;;;;;;;;;974:303:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;974:303:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:306;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1449:306:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;534:76:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;534:76:16;;;;;;;;;;;;;;;;;;;;;;;;;;;955:82:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;955:82:17;;;;;;;;;;;;;;;;;;;;;;;3705:588:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;3995:312:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3995:312:3;;;;;;;;;;;;;;;;;;;;;;;2974:69:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2974:69:15;;;;;;;;;;;;;;;;;;;;;;;;;;;3705:588;3780:17;3910:14;978:20:25;971:1;954:13;;:18;;;;;;;;;;;1001:13;;978:36;;3800:9:15;3780:29;;3815:44;3836:11;3849:9;3815:20;:44::i;:::-;3927:26;3943:9;3927:15;:26::i;:::-;3910:43;;3993:25;4008:9;3993:10;;:14;;:25;;;;:::i;:::-;3980:10;:38;;;;4025:37;4042:11;4055:6;4025:16;:37::i;:::-;4114:11;4073:89;;4096:10;4073:89;;;4133:9;4150:6;4073:89;;;;;;;;;;;;;;;;;;;;;;;;4169:46;4192:11;4205:9;4169:22;:46::i;:::-;4222:15;:13;:15::i;:::-;4243:45;4265:11;4278:9;4243:21;:45::i;:::-;1051:13:25;;1035:12;:29;1027:38;;;;;;;;3705:588:15;;;;:::o;1594:154:17:-;1636:4;1731:12;;1713:15;:30;1706:37;;1594:154;:::o;722:85:12:-;770:30;789:10;770:18;:30::i;:::-;722:85::o;3260:68:15:-;3296:7;3318:5;;3311:12;;3260:68;:::o;611:105:12:-;415:25;429:10;415:13;:25::i;:::-;407:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:24;701:7;685:15;:24::i;:::-;611:105;:::o;1085::18:-;327:20:14;336:10;327:8;:20::i;:::-;319:29;;;;;;;;801:7:18;;;;;;;;;;;793:16;;;;;;;;1149:5;1139:7;;:15;;;;;;;;;;;;;;;;;;1165:20;1174:10;1165:20;;;;;;;;;;;;;;;;;;;;;;1085:105::o;3383:79:15:-;3425:7;3447:10;;3440:17;;3383:79;:::o;686:119:11:-;747:4;770:19;:28;790:7;770:28;;;;;;;;;;;;;;;;;;;;;;;;;763:35;;686:119;;;:::o;364:100:14:-;420:4;439:20;451:7;439;:11;;:20;;;;:::i;:::-;432:27;;364:100;;;:::o;1253:187:17:-;1292:4;1388:12;;1369:15;:31;;:66;;;;;1423:12;;1404:15;:31;;1369:66;1362:73;;1253:187;:::o;1094:82::-;1137:7;1159:12;;1152:19;;1094:82;:::o;758:161:16:-;800:10;;;;;;;;;;;799:11;791:20;;;;;;;;825:11;:9;:11::i;:::-;817:20;;;;;;;;857:4;844:10;;:17;;;;;;;;;;;;;;;;;;868:15;:13;:15::i;:::-;894:20;;;;;;;;;;758:161::o;3111:72:15:-;3149:7;3171;;;;;;;;;;;3164:14;;3111:72;:::o;438:69:18:-;476:4;495:7;;;;;;;;;;;488:14;;438:69;:::o;489:116:12:-;550:4;573:25;590:7;573:12;:16;;:25;;;;:::i;:::-;566:32;;489:116;;;:::o;556:69:14:-;595:25;609:10;595:13;:25::i;:::-;556:69::o;468:84::-;327:20;336:10;327:8;:20::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;:19::i;:::-;468:84;:::o;900:103:18:-;327:20:14;336:10;327:8;:20::i;:::-;319:29;;;;;;;;648:7:18;;;;;;;;;;;647:8;639:17;;;;;;;;965:4;955:7;;:14;;;;;;;;;;;;;;;;;;980:18;987:10;980:18;;;;;;;;;;;;;;;;;;;;;;900:103::o;1238:56:3:-;1285:9;1238:56;:::o;1324:53::-;1369:8;1324:53;:::o;974:303:11:-;1098:9;415:25:12;429:10;415:13;:25::i;:::-;407:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1110:1:11;1098:13;;1093:178;1117:8;:15;1113:1;:19;1093:178;;;1189:4;1154:19;:32;1174:8;1183:1;1174:11;;;;;;;;;;;;;;;;;;1154:32;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1248:8;1257:1;1248:11;;;;;;;;;;;;;;;;;;1212:48;;1236:10;1212:48;;;;;;;;;;;;1135:3;;;;;;;1093:178;;;974:303;;:::o;1449:306::-;1574:9;415:25:12;429:10;415:13;:25::i;:::-;407:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:1:11;1574:13;;1569:180;1593:8;:15;1589:1;:19;1569:180;;;1665:5;1630:19;:32;1650:8;1659:1;1650:11;;;;;;;;;;;;;;;;;;1630:32;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1726:8;1735:1;1726:11;;;;;;;;;;;;;;;;;;1689:49;;1714:10;1689:49;;;;;;;;;;;;1611:3;;;;;;;1569:180;;;1449:306;;:::o;534:76:16:-;576:4;595:10;;;;;;;;;;;588:17;;534:76;:::o;955:82:17:-;998:7;1020:12;;1013:19;;955:82;:::o;3995:312:3:-;4066:7;4174:36;1369:8;4174:12;;:16;;:36;;;;:::i;:::-;4155:15;:56;4151:150;;;4234:13;;4227:20;;;;4151:150;4285:5;;4278:12;;3995:312;;:::o;2974:69:15:-;3011:6;3032;;;;;;;;;;;3025:13;;2974:69;:::o;4855:447:3:-;4991:50;5018:11;5031:9;4991:26;:50::i;:::-;5060:8;:6;:8::i;:::-;5059:9;5051:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:9;5130;:33;;5122:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5230:26;5244:11;5230:13;:26::i;:::-;5222:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4855:447;;:::o;5573:252::-;5678:7;5787:31;5801:16;:14;:16::i;:::-;5787:9;:13;;:31;;;;:::i;:::-;5780:38;;5573:252;;;:::o;1272:131:19:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;6188:146:15:-;6289:40;6304:11;6317;6289:14;:40::i;:::-;6188:146;;:::o;6585:129::-;;;:::o;7150:72::-;7190:7;;;;;;;;;;;:16;;:27;7207:9;7190:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7190:27:15;7150:72::o;5394:137::-;;;:::o;952:141:12:-;1016:28;1036:7;1016:12;:19;;:28;;;;:::i;:::-;1078:7;1059:27;;;;;;;;;;;;952:141;:::o;813:133::-;874:25;891:7;874:12;:16;;:25;;;;:::i;:::-;931:7;914:25;;;;;;;;;;;;813:133;:::o;725:166:13:-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;3587:201:3:-;3674:24;3643:21;:19;:21::i;:::-;3701:6;;;;;;;;;;;:16;;;3726:4;3701:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3701:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3701:31:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3701:31:3;;;;;;;;;;;;;;;;3674:58;;3742:39;3757:5;;;;;;;;;;;3764:16;3742:14;:39::i;:::-;3587:201;:::o;741:116:14:-;796:23;811:7;796;:14;;:23;;;;:::i;:::-;844:7;830:22;;;;;;;;;;;;741:116;:::o;629:108::-;681:20;693:7;681;:11;;:20;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;1928:185:17:-;425:8;:6;:8::i;:::-;417:17;;;;;;;;2058:50;2085:11;2098:9;2058:26;:50::i;:::-;1928:185;;:::o;204:381:19:-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;5792:149:15:-;5891:45;5911:11;5924;5891:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;5792:149;;:::o;477:170:13:-;571:1;552:21;;:7;:21;;;;544:30;;;;;;;;588:18;592:4;598:7;588:3;:18::i;:::-;580:27;;;;;;;;637:5;614:4;:11;;:20;626:7;614:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;477:170;;:::o;244:167::-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;:18::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;1116:39:16:-;:::o;4938:180:15:-;5081:1;5058:25;;:11;:25;;;;5050:34;;;;;;;;5111:1;5098:9;:14;;5090:23;;;;;;;;4938:180;;:::o;407:139:24:-;515:5;:14;;;530:2;534:5;515:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;515:25:24;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;515:25:24;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;515:25:24;;;;;;;;;;;;;;;;507:34;;;;;;;;407:139;;;:::o",
  "source": "/** @title Hey Token Sale\n *  @author Thomas Vanderstraeten - <thomas@get-hey.com>\n *  This smart contract has undertaken X audit and X bounty program.\n *  However, keep in mind that smart contracts still rely on experimental technology.\n */\n\npragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\";\nimport \"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"./utils/KYC.sol\";\n\n/**\n *  @title Hey Token Sale\n *  @dev The only deviations from OpenZeppelin's standard Crowdsale example\n *  is a Pausable behaviour to freeze buying of tokens, and a funneling of\n *  unsold tokens to a Pool address when the sale closes.\n *  Note that we are naming this contract 'TokenSale' to not redeclare the parent\n *  Crowdsale contract, from which Sale indirectly inherits.\n */\ncontract TokenSale is TimedCrowdsale, FinalizableCrowdsale, Pausable, KYC {\n\n    /* *** Libraries *** */\n    using SafeMath for uint256;\n\n\n    /* *** Sale Parameters *** */\n    // Constants\n    uint256 public constant MINIMUM_CONTRIBUTION = 0.1 ether; // Minimum contribution\n    uint256 public constant FIRST_DAY_DURATION = 24 hours;    // Duration of the first sale day\n    // Initialized at contract deployment\n    uint256 private _openingTime;   // When the sale starts\n    uint256 private _firstDayRate;  // The ETH-to-Token rate for the first day\n    uint256 private _rate;          // The ETH-to-Token rate after the first day\n    address private _pool;          // The address where unsold tokens are sent at finalization\n    IERC20 private _token;          // The token which is sold\n\n\n    /* *** Public Functions *** */\n\n    /** @dev Constructor. First contract set up (tokens will also need to be transferred to the contract afterwards)\n     *  @param openingTime Time the sale will start in seconds since the Unix Epoch\n     *  @param closingTime Time the sale will close in seconds since the Unix Epoch\n     *  @param firstDayRate ETH-to-Token rate for the first day of the sale\n     *  @param rate ETH-to-Token rate after the first day of the sale\n     *  @param wallet The party which will get the funds of the token sale\n     *  @param pool The party which will get the unsold tokens at closing of the sale\n     *  @param token The ERC20 token being sold\n     */\n    constructor(\n        uint256 openingTime,\n        uint256 closingTime,\n        uint256 firstDayRate,\n        uint256 rate,\n        address wallet,\n        address pool,\n        IERC20 token\n    )\n        public\n        Crowdsale(rate, wallet, token)\n        TimedCrowdsale(openingTime, closingTime)\n    {\n        require(firstDayRate > 0, \"first day rate must be above 0\");\n        require(pool != address(0), \"pool cannot be the zero address\");\n\n        _openingTime = openingTime;\n        _firstDayRate = firstDayRate;\n        _rate = rate;\n        _pool = pool;\n        _token = token;\n    }\n\n    /** @dev Called when the sale is finalized - extension of OpenZeppelin's\n     *  standard function. We extend it to have all potentially unsold tokens\n     *  transferred to the Pool (where they will be made redeemable).\n     *  This function is called by the public finalize() function.\n     *  Note interestingly that the caller finalize() public function is callable\n     *  by anyone to avoid having the admin prevent finalization maliciously.\n     */\n    function _finalization()\n        internal\n    {\n        super._finalization();\n        uint256 remainingBalance = _token.balanceOf(address(this));\n        _deliverTokens(_pool, remainingBalance);\n    }\n\n    /** @dev Override of OpenZeppelin's standard function to reflect the\n     *  evolving ETH-to-Token rate.\n     *  @return uint256 The current number of tokens purchasable for the Wei amount\n     */\n    function getCurrentRate()\n        public\n        view\n        returns (uint256)\n    {\n        // solium-disable-next-line security/no-block-members\n        if (block.timestamp < (_openingTime.add(FIRST_DAY_DURATION))) {\n            return _firstDayRate;\n        } else {\n            return _rate;\n        }\n    }\n\n\n    /* *** Internal Functions *** */\n\n    /** @dev Called before any purchase is confirmed - extension of OpenZeppelin's\n     *  standard function to implement the Pausable, MinimumContribution and KYC\n     *  behaviours as requirements.\n     *  Note that OpenZeppelin's implementation choice has been to have this\n     *  function as a view function, although it does not have a return value.\n     *  @param beneficiary The party that wishes to receive tokens\n     *  @param weiAmount The amount sent in exchange for tokens, in Wei\n     */\n    function _preValidatePurchase(\n        address beneficiary,\n        uint256 weiAmount\n    )\n        internal\n        view\n    {\n        super._preValidatePurchase(beneficiary, weiAmount);\n        require(!paused(), \"cannot purchase when contract is paused\");\n        require(msg.value >= MINIMUM_CONTRIBUTION, \"contribution must be above minium authorized\");\n        require(kycAuthorized(beneficiary), \"beneficiary must be KYC authorized\");\n    }\n\n    /** @dev Override of OpenZeppelin's standard function to reflect the\n     *  evolving ETH-to-Token rate.\n     *  @param weiAmount The amount sent in exchange for tokens, in Wei\n     *  @return uint256 The number of tokens purchasable for the Wei amount\n     */\n    function _getTokenAmount(\n        uint256 weiAmount\n    )\n        internal\n        view\n        returns (uint256)\n    {\n        // Note that the decimals of ETH and Token (both 18) cancel each other\n        return weiAmount.mul(getCurrentRate());\n    }\n}\n",
  "sourcePath": "/Users/thomasvanderstraeten/code/hey/mainchain/contracts/TokenSale.sol",
  "ast": {
    "absolutePath": "/Users/thomasvanderstraeten/code/hey/mainchain/contracts/TokenSale.sol",
    "exportedSymbols": {
      "TokenSale": [
        451
      ]
    },
    "id": 452,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 259,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "243:24:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 260,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2310,
        "src": "269:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "id": 261,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2198,
        "src": "351:89:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 262,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2393,
        "src": "441:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 263,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 3201,
        "src": "506:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 264,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2521,
        "src": "571:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thomasvanderstraeten/code/hey/mainchain/contracts/utils/KYC.sol",
        "file": "./utils/KYC.sol",
        "id": 265,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 1574,
        "src": "631:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 266,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2309,
              "src": "1066:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$2309",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 267,
            "nodeType": "InheritanceSpecifier",
            "src": "1066:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 268,
              "name": "FinalizableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2197,
              "src": "1082:20:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinalizableCrowdsale_$2197",
                "typeString": "contract FinalizableCrowdsale"
              }
            },
            "id": 269,
            "nodeType": "InheritanceSpecifier",
            "src": "1082:20:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 270,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2392,
              "src": "1104:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$2392",
                "typeString": "contract Pausable"
              }
            },
            "id": 271,
            "nodeType": "InheritanceSpecifier",
            "src": "1104:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 272,
              "name": "KYC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1573,
              "src": "1114:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KYC_$1573",
                "typeString": "contract KYC"
              }
            },
            "id": 273,
            "nodeType": "InheritanceSpecifier",
            "src": "1114:3:3"
          }
        ],
        "contractDependencies": [
          1573,
          1677,
          1874,
          2139,
          2197,
          2309,
          2392,
          3375
        ],
        "contractKind": "contract",
        "documentation": " @title Hey Token Sale\n @dev The only deviations from OpenZeppelin's standard Crowdsale example\n is a Pausable behaviour to freeze buying of tokens, and a funneling of\n unsold tokens to a Pool address when the sale closes.\n Note that we are naming this contract 'TokenSale' to not redeclare the parent\n Crowdsale contract, from which Sale indirectly inherits.",
        "fullyImplemented": true,
        "id": 451,
        "linearizedBaseContracts": [
          451,
          1573,
          1677,
          2392,
          1874,
          2197,
          2309,
          2139,
          3375
        ],
        "name": "TokenSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 276,
            "libraryName": {
              "contractScope": null,
              "id": 274,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2520,
              "src": "1159:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2520",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1153:27:3",
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 279,
            "name": "MINIMUM_CONTRIBUTION",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1238:56:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1238:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e31",
              "id": 278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1285:9:3",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 282,
            "name": "FIRST_DAY_DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1324:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 280,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1324:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3234",
              "id": 281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1369:8:3",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "24"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 284,
            "name": "_openingTime",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1462:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 283,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1462:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 286,
            "name": "_firstDayRate",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1522:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 285,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1522:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 288,
            "name": "_rate",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1601:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 287,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1601:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 290,
            "name": "_pool",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1682:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1682:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 292,
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1778:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3200",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 291,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3200,
              "src": "1778:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3200",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "2830:291:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "firstDayRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2848:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2863:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2848:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6669727374206461792072617465206d7573742062652061626f76652030",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2866:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6758f0afa287093724eb240ee66c9844f1cff94199c19a50eb19e4d3a739c4c",
                          "typeString": "literal_string \"first day rate must be above 0\""
                        },
                        "value": "first day rate must be above 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6758f0afa287093724eb240ee66c9844f1cff94199c19a50eb19e4d3a739c4c",
                          "typeString": "literal_string \"first day rate must be above 0\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "2840:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 326,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "2917:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2933:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2925:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2925:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2917:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706f6f6c2063616e6e6f7420626520746865207a65726f2061646472657373",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2937:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d458305a613c76261dda4942709b5b997c0b7daad72c52a3f03d44f0d082a547",
                          "typeString": "literal_string \"pool cannot be the zero address\""
                        },
                        "value": "pool cannot be the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d458305a613c76261dda4942709b5b997c0b7daad72c52a3f03d44f0d082a547",
                          "typeString": "literal_string \"pool cannot be the zero address\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "2909:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:62:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 334,
                      "name": "_openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "2982:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2997:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2982:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2982:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "_firstDayRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3018:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "firstDayRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3034:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3018:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3056:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3064:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3056:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 346,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "3078:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 347,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "3086:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3078:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 350,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "3100:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3200",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "3109:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3200",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3100:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3200",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3100:14:3"
                }
              ]
            },
            "documentation": "@dev Constructor. First contract set up (tokens will also need to be transferred to the contract afterwards)\n @param openingTime Time the sale will start in seconds since the Unix Epoch\n @param closingTime Time the sale will close in seconds since the Unix Epoch\n @param firstDayRate ETH-to-Token rate for the first day of the sale\n @param rate ETH-to-Token rate after the first day of the sale\n @param wallet The party which will get the funds of the token sale\n @param pool The party which will get the unsold tokens at closing of the sale\n @param token The ERC20 token being sold",
            "id": 355,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 309,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 300,
                    "src": "2756:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 310,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "2762:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 311,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "2770:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3200",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 312,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 308,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2139,
                  "src": "2746:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2139_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2746:30:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 314,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "2800:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 315,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 296,
                    "src": "2813:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 313,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2309,
                  "src": "2785:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2309_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:40:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2548:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2577:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "name": "firstDayRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2606:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2636:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2658:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2682:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2704:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3200",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 305,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3200,
                    "src": "2704:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3200",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2538:184:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2830:0:3"
            },
            "scope": 451,
            "src": "2527:594:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "3633:155:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 358,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "3643:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenSale_$451",
                          "typeString": "contract super TokenSale"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2196,
                      "src": "3643:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:21:3"
                },
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "name": "remainingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "3674:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 368,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3449,
                            "src": "3726:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSale_$451",
                              "typeString": "contract TokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSale_$451",
                              "typeString": "contract TokenSale"
                            }
                          ],
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3718:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3718:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3701:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3200",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3145,
                      "src": "3701:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 373,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3757:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "remainingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3764:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "_deliverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2093,
                      "src": "3742:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:39:3"
                }
              ]
            },
            "documentation": "@dev Called when the sale is finalized - extension of OpenZeppelin's\n standard function. We extend it to have all potentially unsold tokens\n transferred to the Pool (where they will be made redeemable).\n This function is called by the public finalize() function.\n Note interestingly that the caller finalize() public function is callable\n by anyone to avoid having the admin prevent finalization maliciously.",
            "id": 378,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3633:0:3"
            },
            "scope": 451,
            "src": "3587:201:3",
            "stateMutability": "nonpayable",
            "superFunction": 2196,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "4079:228:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3380,
                        "src": "4155:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4155:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 387,
                              "name": "FIRST_DAY_DURATION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "4191:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 385,
                              "name": "_openingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "4174:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2499,
                            "src": "4174:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4174:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 389,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4173:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4155:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 396,
                    "nodeType": "Block",
                    "src": "4264:37:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "4285:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 382,
                        "id": 395,
                        "nodeType": "Return",
                        "src": "4278:12:3"
                      }
                    ]
                  },
                  "id": 397,
                  "nodeType": "IfStatement",
                  "src": "4151:150:3",
                  "trueBody": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "4213:45:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "_firstDayRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "4234:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 382,
                        "id": 392,
                        "nodeType": "Return",
                        "src": "4227:20:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Override of OpenZeppelin's standard function to reflect the\n evolving ETH-to-Token rate.\n @return uint256 The current number of tokens purchasable for the Wei amount",
            "id": 399,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4018:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "4066:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4065:9:3"
            },
            "scope": 451,
            "src": "3995:312:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "4981:321:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "5018:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5031:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "4991:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenSale_$451",
                          "typeString": "contract super TokenSale"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "4991:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5059:9:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 414,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2340,
                            "src": "5060:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5060:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f74207075726368617365207768656e20636f6e747261637420697320706175736564",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5070:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_868972f58774e5d3e62365a569fcc45aed8833abb421498cba8c8f4ee56c3cf8",
                          "typeString": "literal_string \"cannot purchase when contract is paused\""
                        },
                        "value": "cannot purchase when contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_868972f58774e5d3e62365a569fcc45aed8833abb421498cba8c8f4ee56c3cf8",
                          "typeString": "literal_string \"cannot purchase when contract is paused\""
                        }
                      ],
                      "id": 413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "5051:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5051:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5051:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 421,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3390,
                            "src": "5130:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5130:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 423,
                          "name": "MINIMUM_CONTRIBUTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "5143:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5130:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747269627574696f6e206d7573742062652061626f7665206d696e69756d20617574686f72697a6564",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5165:46:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57c7d7aac00dca8a711a6e76f3e4085456869a13b8e05d0d215b4e89e65f2f99",
                          "typeString": "literal_string \"contribution must be above minium authorized\""
                        },
                        "value": "contribution must be above minium authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57c7d7aac00dca8a711a6e76f3e4085456869a13b8e05d0d215b4e89e65f2f99",
                          "typeString": "literal_string \"contribution must be above minium authorized\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "5122:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5122:90:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "5122:90:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "5244:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 429,
                          "name": "kycAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1496,
                          "src": "5230:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5230:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62656e6566696369617279206d757374206265204b594320617574686f72697a6564",
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5258:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d7b5675e93a5aff07b174d2af69e2a634222786aef5a32f1bb28da416875350",
                          "typeString": "literal_string \"beneficiary must be KYC authorized\""
                        },
                        "value": "beneficiary must be KYC authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d7b5675e93a5aff07b174d2af69e2a634222786aef5a32f1bb28da416875350",
                          "typeString": "literal_string \"beneficiary must be KYC authorized\""
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "5222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5222:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "5222:73:3"
                }
              ]
            },
            "documentation": "@dev Called before any purchase is confirmed - extension of OpenZeppelin's\n standard function to implement the Pausable, MinimumContribution and KYC\n behaviours as requirements.\n Note that OpenZeppelin's implementation choice has been to have this\n function as a view function, although it does not have a return value.\n @param beneficiary The party that wishes to receive tokens\n @param weiAmount The amount sent in exchange for tokens, in Wei",
            "id": 436,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "4894:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "4923:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4884:62:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4981:0:3"
            },
            "scope": 451,
            "src": "4855:447:3",
            "stateMutability": "view",
            "superFunction": 2308,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "5691:134:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 445,
                          "name": "getCurrentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5801:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5801:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "5787:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2427,
                      "src": "5787:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5787:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 442,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "5780:38:3"
                }
              ]
            },
            "documentation": "@dev Override of OpenZeppelin's standard function to reflect the\n evolving ETH-to-Token rate.\n @param weiAmount The amount sent in exchange for tokens, in Wei\n @return uint256 The number of tokens purchasable for the Wei amount",
            "id": 450,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getTokenAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 438,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5607:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5607:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5597:33:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5678:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5678:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5677:9:3"
            },
            "scope": 451,
            "src": "5573:252:3",
            "stateMutability": "view",
            "superFunction": 2127,
            "visibility": "internal"
          }
        ],
        "scope": 452,
        "src": "1044:4783:3"
      }
    ],
    "src": "243:5585:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/thomasvanderstraeten/code/hey/mainchain/contracts/TokenSale.sol",
    "exportedSymbols": {
      "TokenSale": [
        451
      ]
    },
    "id": 452,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 259,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "243:24:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 260,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2310,
        "src": "269:81:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol",
        "id": 261,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2198,
        "src": "351:89:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "file": "openzeppelin-solidity/contracts/lifecycle/Pausable.sol",
        "id": 262,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2393,
        "src": "441:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 263,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 3201,
        "src": "506:64:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 264,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 2521,
        "src": "571:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/thomasvanderstraeten/code/hey/mainchain/contracts/utils/KYC.sol",
        "file": "./utils/KYC.sol",
        "id": 265,
        "nodeType": "ImportDirective",
        "scope": 452,
        "sourceUnit": 1574,
        "src": "631:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 266,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2309,
              "src": "1066:14:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$2309",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 267,
            "nodeType": "InheritanceSpecifier",
            "src": "1066:14:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 268,
              "name": "FinalizableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2197,
              "src": "1082:20:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinalizableCrowdsale_$2197",
                "typeString": "contract FinalizableCrowdsale"
              }
            },
            "id": 269,
            "nodeType": "InheritanceSpecifier",
            "src": "1082:20:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 270,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2392,
              "src": "1104:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$2392",
                "typeString": "contract Pausable"
              }
            },
            "id": 271,
            "nodeType": "InheritanceSpecifier",
            "src": "1104:8:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 272,
              "name": "KYC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1573,
              "src": "1114:3:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KYC_$1573",
                "typeString": "contract KYC"
              }
            },
            "id": 273,
            "nodeType": "InheritanceSpecifier",
            "src": "1114:3:3"
          }
        ],
        "contractDependencies": [
          1573,
          1677,
          1874,
          2139,
          2197,
          2309,
          2392,
          3375
        ],
        "contractKind": "contract",
        "documentation": " @title Hey Token Sale\n @dev The only deviations from OpenZeppelin's standard Crowdsale example\n is a Pausable behaviour to freeze buying of tokens, and a funneling of\n unsold tokens to a Pool address when the sale closes.\n Note that we are naming this contract 'TokenSale' to not redeclare the parent\n Crowdsale contract, from which Sale indirectly inherits.",
        "fullyImplemented": true,
        "id": 451,
        "linearizedBaseContracts": [
          451,
          1573,
          1677,
          2392,
          1874,
          2197,
          2309,
          2139,
          3375
        ],
        "name": "TokenSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 276,
            "libraryName": {
              "contractScope": null,
              "id": 274,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2520,
              "src": "1159:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2520",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1153:27:3",
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 279,
            "name": "MINIMUM_CONTRIBUTION",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1238:56:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 277,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1238:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "302e31",
              "id": 278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1285:9:3",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000_by_1",
                "typeString": "int_const 100000000000000000"
              },
              "value": "0.1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 282,
            "name": "FIRST_DAY_DURATION",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1324:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 280,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1324:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3234",
              "id": 281,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1369:8:3",
              "subdenomination": "hours",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "24"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 284,
            "name": "_openingTime",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1462:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 283,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1462:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 286,
            "name": "_firstDayRate",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1522:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 285,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1522:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 288,
            "name": "_rate",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1601:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 287,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1601:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 290,
            "name": "_pool",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1682:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 289,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1682:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 292,
            "name": "_token",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "1778:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$3200",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 291,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3200,
              "src": "1778:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3200",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "2830:291:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 319,
                          "name": "firstDayRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 298,
                          "src": "2848:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2863:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2848:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6669727374206461792072617465206d7573742062652061626f76652030",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2866:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6758f0afa287093724eb240ee66c9844f1cff94199c19a50eb19e4d3a739c4c",
                          "typeString": "literal_string \"first day rate must be above 0\""
                        },
                        "value": "first day rate must be above 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6758f0afa287093724eb240ee66c9844f1cff94199c19a50eb19e4d3a739c4c",
                          "typeString": "literal_string \"first day rate must be above 0\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "2840:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 326,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 304,
                          "src": "2917:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2933:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2925:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2925:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2917:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706f6f6c2063616e6e6f7420626520746865207a65726f2061646472657373",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2937:33:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d458305a613c76261dda4942709b5b997c0b7daad72c52a3f03d44f0d082a547",
                          "typeString": "literal_string \"pool cannot be the zero address\""
                        },
                        "value": "pool cannot be the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d458305a613c76261dda4942709b5b997c0b7daad72c52a3f03d44f0d082a547",
                          "typeString": "literal_string \"pool cannot be the zero address\""
                        }
                      ],
                      "id": 325,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "2909:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:62:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 334,
                      "name": "_openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "2982:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 335,
                      "name": "openingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "2997:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2982:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "2982:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 338,
                      "name": "_firstDayRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 286,
                      "src": "3018:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 339,
                      "name": "firstDayRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3034:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3018:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "_rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 288,
                      "src": "3056:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 300,
                      "src": "3064:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3056:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3056:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 346,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 290,
                      "src": "3078:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 347,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 304,
                      "src": "3086:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3078:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 350,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 292,
                      "src": "3100:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3200",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "3109:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$3200",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3100:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3200",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3100:14:3"
                }
              ]
            },
            "documentation": "@dev Constructor. First contract set up (tokens will also need to be transferred to the contract afterwards)\n @param openingTime Time the sale will start in seconds since the Unix Epoch\n @param closingTime Time the sale will close in seconds since the Unix Epoch\n @param firstDayRate ETH-to-Token rate for the first day of the sale\n @param rate ETH-to-Token rate after the first day of the sale\n @param wallet The party which will get the funds of the token sale\n @param pool The party which will get the unsold tokens at closing of the sale\n @param token The ERC20 token being sold",
            "id": 355,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 309,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 300,
                    "src": "2756:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 310,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 302,
                    "src": "2762:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 311,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 306,
                    "src": "2770:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3200",
                      "typeString": "contract IERC20"
                    }
                  }
                ],
                "id": 312,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 308,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2139,
                  "src": "2746:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2139_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2746:30:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 314,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 294,
                    "src": "2800:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 315,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 296,
                    "src": "2813:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 316,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 313,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2309,
                  "src": "2785:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$2309_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:40:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2548:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 296,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2577:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 298,
                  "name": "firstDayRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2606:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 300,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2636:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2658:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2658:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 304,
                  "name": "pool",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2682:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2682:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 306,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "2704:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$3200",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 305,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3200,
                    "src": "2704:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$3200",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2538:184:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2830:0:3"
            },
            "scope": 451,
            "src": "2527:594:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 377,
              "nodeType": "Block",
              "src": "3633:155:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 358,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "3643:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenSale_$451",
                          "typeString": "contract super TokenSale"
                        }
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_finalization",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2196,
                      "src": "3643:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3643:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 362,
                  "nodeType": "ExpressionStatement",
                  "src": "3643:21:3"
                },
                {
                  "assignments": [
                    364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 364,
                      "name": "remainingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 378,
                      "src": "3674:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3674:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 368,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3449,
                            "src": "3726:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSale_$451",
                              "typeString": "contract TokenSale"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSale_$451",
                              "typeString": "contract TokenSale"
                            }
                          ],
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3718:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3718:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 365,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 292,
                        "src": "3701:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3200",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3145,
                      "src": "3701:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3701:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3674:58:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 373,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 290,
                        "src": "3757:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 374,
                        "name": "remainingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 364,
                        "src": "3764:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 372,
                      "name": "_deliverTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2093,
                      "src": "3742:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 376,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:39:3"
                }
              ]
            },
            "documentation": "@dev Called when the sale is finalized - extension of OpenZeppelin's\n standard function. We extend it to have all potentially unsold tokens\n transferred to the Pool (where they will be made redeemable).\n This function is called by the public finalize() function.\n Note interestingly that the caller finalize() public function is callable\n by anyone to avoid having the admin prevent finalization maliciously.",
            "id": 378,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_finalization",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3609:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3633:0:3"
            },
            "scope": 451,
            "src": "3587:201:3",
            "stateMutability": "nonpayable",
            "superFunction": 2196,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "4079:228:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3380,
                        "src": "4155:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4155:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 387,
                              "name": "FIRST_DAY_DURATION",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "4191:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 385,
                              "name": "_openingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 284,
                              "src": "4174:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2499,
                            "src": "4174:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4174:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 389,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4173:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4155:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 396,
                    "nodeType": "Block",
                    "src": "4264:37:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 394,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 288,
                          "src": "4285:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 382,
                        "id": 395,
                        "nodeType": "Return",
                        "src": "4278:12:3"
                      }
                    ]
                  },
                  "id": 397,
                  "nodeType": "IfStatement",
                  "src": "4151:150:3",
                  "trueBody": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "4213:45:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "_firstDayRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 286,
                          "src": "4234:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 382,
                        "id": 392,
                        "nodeType": "Return",
                        "src": "4227:20:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Override of OpenZeppelin's standard function to reflect the\n evolving ETH-to-Token rate.\n @return uint256 The current number of tokens purchasable for the Wei amount",
            "id": 399,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getCurrentRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4018:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "4066:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4065:9:3"
            },
            "scope": 451,
            "src": "3995:312:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "4981:321:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 409,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 401,
                        "src": "5018:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 410,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 403,
                        "src": "5031:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 406,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3450,
                        "src": "4991:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenSale_$451",
                          "typeString": "contract super TokenSale"
                        }
                      },
                      "id": 408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_preValidatePurchase",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "4991:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5059:9:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 414,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2340,
                            "src": "5060:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5060:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f74207075726368617365207768656e20636f6e747261637420697320706175736564",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5070:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_868972f58774e5d3e62365a569fcc45aed8833abb421498cba8c8f4ee56c3cf8",
                          "typeString": "literal_string \"cannot purchase when contract is paused\""
                        },
                        "value": "cannot purchase when contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_868972f58774e5d3e62365a569fcc45aed8833abb421498cba8c8f4ee56c3cf8",
                          "typeString": "literal_string \"cannot purchase when contract is paused\""
                        }
                      ],
                      "id": 413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "5051:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5051:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "5051:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 421,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3390,
                            "src": "5130:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5130:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 423,
                          "name": "MINIMUM_CONTRIBUTION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "5143:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5130:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e747269627574696f6e206d7573742062652061626f7665206d696e69756d20617574686f72697a6564",
                        "id": 425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5165:46:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57c7d7aac00dca8a711a6e76f3e4085456869a13b8e05d0d215b4e89e65f2f99",
                          "typeString": "literal_string \"contribution must be above minium authorized\""
                        },
                        "value": "contribution must be above minium authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57c7d7aac00dca8a711a6e76f3e4085456869a13b8e05d0d215b4e89e65f2f99",
                          "typeString": "literal_string \"contribution must be above minium authorized\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "5122:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5122:90:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "5122:90:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 430,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 401,
                            "src": "5244:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 429,
                          "name": "kycAuthorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1496,
                          "src": "5230:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5230:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "62656e6566696369617279206d757374206265204b594320617574686f72697a6564",
                        "id": 432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5258:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d7b5675e93a5aff07b174d2af69e2a634222786aef5a32f1bb28da416875350",
                          "typeString": "literal_string \"beneficiary must be KYC authorized\""
                        },
                        "value": "beneficiary must be KYC authorized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d7b5675e93a5aff07b174d2af69e2a634222786aef5a32f1bb28da416875350",
                          "typeString": "literal_string \"beneficiary must be KYC authorized\""
                        }
                      ],
                      "id": 428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3393,
                        3394
                      ],
                      "referencedDeclaration": 3394,
                      "src": "5222:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5222:73:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "5222:73:3"
                }
              ]
            },
            "documentation": "@dev Called before any purchase is confirmed - extension of OpenZeppelin's\n standard function to implement the Pausable, MinimumContribution and KYC\n behaviours as requirements.\n Note that OpenZeppelin's implementation choice has been to have this\n function as a view function, although it does not have a return value.\n @param beneficiary The party that wishes to receive tokens\n @param weiAmount The amount sent in exchange for tokens, in Wei",
            "id": 436,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_preValidatePurchase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 401,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "4894:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4894:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 403,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 436,
                  "src": "4923:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4923:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4884:62:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4981:0:3"
            },
            "scope": 451,
            "src": "4855:447:3",
            "stateMutability": "view",
            "superFunction": 2308,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "5691:134:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 445,
                          "name": "getCurrentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 399,
                          "src": "5801:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5801:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 443,
                        "name": "weiAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "5787:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2427,
                      "src": "5787:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5787:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 442,
                  "id": 448,
                  "nodeType": "Return",
                  "src": "5780:38:3"
                }
              ]
            },
            "documentation": "@dev Override of OpenZeppelin's standard function to reflect the\n evolving ETH-to-Token rate.\n @param weiAmount The amount sent in exchange for tokens, in Wei\n @return uint256 The number of tokens purchasable for the Wei amount",
            "id": 450,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "_getTokenAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 438,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5607:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5607:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5597:33:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "5678:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5678:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5677:9:3"
            },
            "scope": 451,
            "src": "5573:252:3",
            "stateMutability": "view",
            "superFunction": 2127,
            "visibility": "internal"
          }
        ],
        "scope": 452,
        "src": "1044:4783:3"
      }
    ],
    "src": "243:5585:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1543575271380": {
      "events": {},
      "links": {},
      "address": "0x214c1fcf508127cf69ba0d4d9e4f017adb064fae",
      "transactionHash": "0xf389ff0ee43ce6c39a9261e01a3a5c7043e4edfe3a40cd06f8ab6024819287f9"
    },
    "1543575362424": {
      "events": {},
      "links": {},
      "address": "0xa6f43130efb2c54ce284aa46f3167f16fdf3158b",
      "transactionHash": "0xec7298d5b7aa355c32652e185a040fa85dad626e8af8a1e7bd7a182761243edc"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-11-30T10:56:10.057Z"
}